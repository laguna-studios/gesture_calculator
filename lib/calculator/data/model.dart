enum CalculatorError { none, numberToBig }

enum CalculatorToken {
  num_0,
  num_1,
  num_2,
  num_3,
  num_4,
  num_5,
  num_6,
  num_7,
  num_8,
  num_9,
  constPi,
  constE,
  dot,
  opAdd,
  opSubtract,
  opDivide,
  opMultiply,
  opPercentage,
  opPower,
  bracketOpen,
  bracketClose,
  bracketAuto,
  sin,
  cos,
  tan,
  cot,
  sinh,
  cosh,
  tanh,
  coth,
  asin,
  acos,
  atan,
  acot,
  asinh,
  acosh,
  atanh,
  acoth,
  ln,
  log,
  factorial,
  squareRoot,
  abs,
  squared,
  ePowX,
  tenPowX,
  clear,
  clearOne,
  equals,
  radOrDeg
}

extension CalculatorTokenExtension on CalculatorToken {
  String get calculatorToken {
    return {
      CalculatorToken.num_0: "0",
      CalculatorToken.num_1: "1",
      CalculatorToken.num_2: "2",
      CalculatorToken.num_3: "3",
      CalculatorToken.num_4: "4",
      CalculatorToken.num_5: "5",
      CalculatorToken.num_6: "6",
      CalculatorToken.num_7: "7",
      CalculatorToken.num_8: "8",
      CalculatorToken.num_9: "9",
      CalculatorToken.constPi: "π",
      CalculatorToken.constE: "e",
      CalculatorToken.dot: ".",
      CalculatorToken.opAdd: "+",
      CalculatorToken.opSubtract: "-",
      CalculatorToken.opDivide: "÷",
      CalculatorToken.opMultiply: "×",
      CalculatorToken.opPercentage: "%",
      CalculatorToken.opPower: "^",
      CalculatorToken.bracketOpen: "(",
      CalculatorToken.bracketClose: ")",
      CalculatorToken.bracketAuto: "()",
      CalculatorToken.sin: "sin(",
      CalculatorToken.cos: "cos(",
      CalculatorToken.tan: "tan(",
      CalculatorToken.cot: "cot(",
      CalculatorToken.sinh: "sinh(",
      CalculatorToken.cosh: "cosh(",
      CalculatorToken.tanh: "tanh(",
      CalculatorToken.coth: "coth(",
      CalculatorToken.asin: "sin⁻¹(",
      CalculatorToken.acos: "cos⁻¹(",
      CalculatorToken.atan: "tan⁻¹(",
      CalculatorToken.acot: "cot⁻¹(",
      CalculatorToken.asinh: "sinh⁻¹(",
      CalculatorToken.acosh: "cosh⁻¹(",
      CalculatorToken.atanh: "tanh⁻¹(",
      CalculatorToken.acoth: "coth⁻¹(",
      CalculatorToken.ln: "ln(",
      CalculatorToken.log: "log(",
      CalculatorToken.factorial: "!",
      CalculatorToken.squareRoot: "√(",
      CalculatorToken.abs: "abs(",
      CalculatorToken.squared: "^2",
      CalculatorToken.ePowX: "e^(",
      CalculatorToken.tenPowX: "10^(",
      CalculatorToken.clear: "C",
      CalculatorToken.clearOne: "<-",
      CalculatorToken.equals: "=",
      CalculatorToken.radOrDeg: "radOrDeg",
    }[this]!;
  }
}
